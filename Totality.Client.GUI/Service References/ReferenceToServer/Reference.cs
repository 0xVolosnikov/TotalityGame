//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Totality.Client.GUI.ReferenceToServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/Totality.Model")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MinisteryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetCountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetCountryName2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TargetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TargetMinisteryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSecretField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Ministery {
            get {
                return this.MinisteryField;
            }
            set {
                if ((this.MinisteryField.Equals(value) != true)) {
                    this.MinisteryField = value;
                    this.RaisePropertyChanged("Ministery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetCountryName {
            get {
                return this.TargetCountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetCountryNameField, value) != true)) {
                    this.TargetCountryNameField = value;
                    this.RaisePropertyChanged("TargetCountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetCountryName2 {
            get {
                return this.TargetCountryName2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TargetCountryName2Field, value) != true)) {
                    this.TargetCountryName2Field = value;
                    this.RaisePropertyChanged("TargetCountryName2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TargetId {
            get {
                return this.TargetIdField;
            }
            set {
                if ((this.TargetIdField.Equals(value) != true)) {
                    this.TargetIdField = value;
                    this.RaisePropertyChanged("TargetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TargetMinistery {
            get {
                return this.TargetMinisteryField;
            }
            set {
                if ((this.TargetMinisteryField.Equals(value) != true)) {
                    this.TargetMinisteryField = value;
                    this.RaisePropertyChanged("TargetMinistery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSecret {
            get {
                return this.isSecretField;
            }
            set {
                if ((this.isSecretField.Equals(value) != true)) {
                    this.isSecretField = value;
                    this.RaisePropertyChanged("isSecret");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DipMsg", Namespace="http://schemas.datacontract.org/2004/07/Totality.Model.Diplomatical")]
    [System.SerializableAttribute()]
    public partial class DipMsg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NukeRocket", Namespace="http://schemas.datacontract.org/2004/07/Totality.Model")]
    [System.SerializableAttribute()]
    public partial class NukeRocket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LifeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LifeTime {
            get {
                return this.LifeTimeField;
            }
            set {
                if ((this.LifeTimeField.Equals(value) != true)) {
                    this.LifeTimeField = value;
                    this.RaisePropertyChanged("LifeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="News", Namespace="http://schemas.datacontract.org/2004/07/Totality.Model")]
    [System.SerializableAttribute()]
    public partial class News : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] argsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string newsCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] args {
            get {
                return this.argsField;
            }
            set {
                if ((object.ReferenceEquals(this.argsField, value) != true)) {
                    this.argsField = value;
                    this.RaisePropertyChanged("args");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string newsCode {
            get {
                return this.newsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.newsCodeField, value) != true)) {
                    this.newsCodeField = value;
                    this.RaisePropertyChanged("newsCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/Totality.Model")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CounterSpyLvlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CounterSpyLvlUpCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, long> CurrencyAccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EcologyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtractExperienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ExtractScLvlUpCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtractScLvlUpExpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtractScienceLvlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FinalAgriculturalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FinalHeavyIndustryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FinalLightIndustryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FinalOilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FinalSteelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FinalWoodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeavyExperienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HeavyScLvlUpCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeavyScLvlUpExpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeavyScienceLvlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IndustryUpgradeCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InnerLvlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InnerLvlUpCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntelligenceLvlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IntelligenceLvlUpCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAlertedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMobilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRepressedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRiotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LightExperienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LightScLvlUpCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LightScLvlUpExpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LightScienceLvlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LvlHeavyIndustryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LvlLightIndustryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LvlMilitaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LvlResIndustryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, short> MassMediaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MilitaryExperienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MilitaryPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MilitaryScLvlUpCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MilitaryScLvlUpExpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MilitaryScienceLvlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] MinsBlocksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MissilesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MoodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NukesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PremierLvlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PremierLvlUpCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductionUpgradeCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShadowingLvlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ShadowingLvlUpCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, Totality.Client.GUI.ReferenceToServer.Country.SpyNetwork> SpyNetworksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TaxesLvlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] WarListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CounterSpyLvl {
            get {
                return this.CounterSpyLvlField;
            }
            set {
                if ((this.CounterSpyLvlField.Equals(value) != true)) {
                    this.CounterSpyLvlField = value;
                    this.RaisePropertyChanged("CounterSpyLvl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CounterSpyLvlUpCost {
            get {
                return this.CounterSpyLvlUpCostField;
            }
            set {
                if ((this.CounterSpyLvlUpCostField.Equals(value) != true)) {
                    this.CounterSpyLvlUpCostField = value;
                    this.RaisePropertyChanged("CounterSpyLvlUpCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, long> CurrencyAccounts {
            get {
                return this.CurrencyAccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyAccountsField, value) != true)) {
                    this.CurrencyAccountsField = value;
                    this.RaisePropertyChanged("CurrencyAccounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Ecology {
            get {
                return this.EcologyField;
            }
            set {
                if ((this.EcologyField.Equals(value) != true)) {
                    this.EcologyField = value;
                    this.RaisePropertyChanged("Ecology");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExtractExperience {
            get {
                return this.ExtractExperienceField;
            }
            set {
                if ((this.ExtractExperienceField.Equals(value) != true)) {
                    this.ExtractExperienceField = value;
                    this.RaisePropertyChanged("ExtractExperience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExtractScLvlUpCost {
            get {
                return this.ExtractScLvlUpCostField;
            }
            set {
                if ((this.ExtractScLvlUpCostField.Equals(value) != true)) {
                    this.ExtractScLvlUpCostField = value;
                    this.RaisePropertyChanged("ExtractScLvlUpCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExtractScLvlUpExp {
            get {
                return this.ExtractScLvlUpExpField;
            }
            set {
                if ((this.ExtractScLvlUpExpField.Equals(value) != true)) {
                    this.ExtractScLvlUpExpField = value;
                    this.RaisePropertyChanged("ExtractScLvlUpExp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExtractScienceLvl {
            get {
                return this.ExtractScienceLvlField;
            }
            set {
                if ((this.ExtractScienceLvlField.Equals(value) != true)) {
                    this.ExtractScienceLvlField = value;
                    this.RaisePropertyChanged("ExtractScienceLvl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FinalAgricultural {
            get {
                return this.FinalAgriculturalField;
            }
            set {
                if ((this.FinalAgriculturalField.Equals(value) != true)) {
                    this.FinalAgriculturalField = value;
                    this.RaisePropertyChanged("FinalAgricultural");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FinalHeavyIndustry {
            get {
                return this.FinalHeavyIndustryField;
            }
            set {
                if ((this.FinalHeavyIndustryField.Equals(value) != true)) {
                    this.FinalHeavyIndustryField = value;
                    this.RaisePropertyChanged("FinalHeavyIndustry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FinalLightIndustry {
            get {
                return this.FinalLightIndustryField;
            }
            set {
                if ((this.FinalLightIndustryField.Equals(value) != true)) {
                    this.FinalLightIndustryField = value;
                    this.RaisePropertyChanged("FinalLightIndustry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FinalOil {
            get {
                return this.FinalOilField;
            }
            set {
                if ((this.FinalOilField.Equals(value) != true)) {
                    this.FinalOilField = value;
                    this.RaisePropertyChanged("FinalOil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FinalSteel {
            get {
                return this.FinalSteelField;
            }
            set {
                if ((this.FinalSteelField.Equals(value) != true)) {
                    this.FinalSteelField = value;
                    this.RaisePropertyChanged("FinalSteel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FinalWood {
            get {
                return this.FinalWoodField;
            }
            set {
                if ((this.FinalWoodField.Equals(value) != true)) {
                    this.FinalWoodField = value;
                    this.RaisePropertyChanged("FinalWood");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeavyExperience {
            get {
                return this.HeavyExperienceField;
            }
            set {
                if ((this.HeavyExperienceField.Equals(value) != true)) {
                    this.HeavyExperienceField = value;
                    this.RaisePropertyChanged("HeavyExperience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HeavyScLvlUpCost {
            get {
                return this.HeavyScLvlUpCostField;
            }
            set {
                if ((this.HeavyScLvlUpCostField.Equals(value) != true)) {
                    this.HeavyScLvlUpCostField = value;
                    this.RaisePropertyChanged("HeavyScLvlUpCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeavyScLvlUpExp {
            get {
                return this.HeavyScLvlUpExpField;
            }
            set {
                if ((this.HeavyScLvlUpExpField.Equals(value) != true)) {
                    this.HeavyScLvlUpExpField = value;
                    this.RaisePropertyChanged("HeavyScLvlUpExp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeavyScienceLvl {
            get {
                return this.HeavyScienceLvlField;
            }
            set {
                if ((this.HeavyScienceLvlField.Equals(value) != true)) {
                    this.HeavyScienceLvlField = value;
                    this.RaisePropertyChanged("HeavyScienceLvl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IndustryUpgradeCost {
            get {
                return this.IndustryUpgradeCostField;
            }
            set {
                if ((this.IndustryUpgradeCostField.Equals(value) != true)) {
                    this.IndustryUpgradeCostField = value;
                    this.RaisePropertyChanged("IndustryUpgradeCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InnerLvl {
            get {
                return this.InnerLvlField;
            }
            set {
                if ((this.InnerLvlField.Equals(value) != true)) {
                    this.InnerLvlField = value;
                    this.RaisePropertyChanged("InnerLvl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InnerLvlUpCost {
            get {
                return this.InnerLvlUpCostField;
            }
            set {
                if ((this.InnerLvlUpCostField.Equals(value) != true)) {
                    this.InnerLvlUpCostField = value;
                    this.RaisePropertyChanged("InnerLvlUpCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntelligenceLvl {
            get {
                return this.IntelligenceLvlField;
            }
            set {
                if ((this.IntelligenceLvlField.Equals(value) != true)) {
                    this.IntelligenceLvlField = value;
                    this.RaisePropertyChanged("IntelligenceLvl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IntelligenceLvlUpCost {
            get {
                return this.IntelligenceLvlUpCostField;
            }
            set {
                if ((this.IntelligenceLvlUpCostField.Equals(value) != true)) {
                    this.IntelligenceLvlUpCostField = value;
                    this.RaisePropertyChanged("IntelligenceLvlUpCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAlerted {
            get {
                return this.IsAlertedField;
            }
            set {
                if ((this.IsAlertedField.Equals(value) != true)) {
                    this.IsAlertedField = value;
                    this.RaisePropertyChanged("IsAlerted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMobilized {
            get {
                return this.IsMobilizedField;
            }
            set {
                if ((this.IsMobilizedField.Equals(value) != true)) {
                    this.IsMobilizedField = value;
                    this.RaisePropertyChanged("IsMobilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRepressed {
            get {
                return this.IsRepressedField;
            }
            set {
                if ((this.IsRepressedField.Equals(value) != true)) {
                    this.IsRepressedField = value;
                    this.RaisePropertyChanged("IsRepressed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRiot {
            get {
                return this.IsRiotField;
            }
            set {
                if ((this.IsRiotField.Equals(value) != true)) {
                    this.IsRiotField = value;
                    this.RaisePropertyChanged("IsRiot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LightExperience {
            get {
                return this.LightExperienceField;
            }
            set {
                if ((this.LightExperienceField.Equals(value) != true)) {
                    this.LightExperienceField = value;
                    this.RaisePropertyChanged("LightExperience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LightScLvlUpCost {
            get {
                return this.LightScLvlUpCostField;
            }
            set {
                if ((this.LightScLvlUpCostField.Equals(value) != true)) {
                    this.LightScLvlUpCostField = value;
                    this.RaisePropertyChanged("LightScLvlUpCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LightScLvlUpExp {
            get {
                return this.LightScLvlUpExpField;
            }
            set {
                if ((this.LightScLvlUpExpField.Equals(value) != true)) {
                    this.LightScLvlUpExpField = value;
                    this.RaisePropertyChanged("LightScLvlUpExp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LightScienceLvl {
            get {
                return this.LightScienceLvlField;
            }
            set {
                if ((this.LightScienceLvlField.Equals(value) != true)) {
                    this.LightScienceLvlField = value;
                    this.RaisePropertyChanged("LightScienceLvl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LvlHeavyIndustry {
            get {
                return this.LvlHeavyIndustryField;
            }
            set {
                if ((this.LvlHeavyIndustryField.Equals(value) != true)) {
                    this.LvlHeavyIndustryField = value;
                    this.RaisePropertyChanged("LvlHeavyIndustry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LvlLightIndustry {
            get {
                return this.LvlLightIndustryField;
            }
            set {
                if ((this.LvlLightIndustryField.Equals(value) != true)) {
                    this.LvlLightIndustryField = value;
                    this.RaisePropertyChanged("LvlLightIndustry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LvlMilitary {
            get {
                return this.LvlMilitaryField;
            }
            set {
                if ((this.LvlMilitaryField.Equals(value) != true)) {
                    this.LvlMilitaryField = value;
                    this.RaisePropertyChanged("LvlMilitary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LvlResIndustry {
            get {
                return this.LvlResIndustryField;
            }
            set {
                if ((this.LvlResIndustryField.Equals(value) != true)) {
                    this.LvlResIndustryField = value;
                    this.RaisePropertyChanged("LvlResIndustry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, short> MassMedia {
            get {
                return this.MassMediaField;
            }
            set {
                if ((object.ReferenceEquals(this.MassMediaField, value) != true)) {
                    this.MassMediaField = value;
                    this.RaisePropertyChanged("MassMedia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MilitaryExperience {
            get {
                return this.MilitaryExperienceField;
            }
            set {
                if ((this.MilitaryExperienceField.Equals(value) != true)) {
                    this.MilitaryExperienceField = value;
                    this.RaisePropertyChanged("MilitaryExperience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MilitaryPower {
            get {
                return this.MilitaryPowerField;
            }
            set {
                if ((this.MilitaryPowerField.Equals(value) != true)) {
                    this.MilitaryPowerField = value;
                    this.RaisePropertyChanged("MilitaryPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MilitaryScLvlUpCost {
            get {
                return this.MilitaryScLvlUpCostField;
            }
            set {
                if ((this.MilitaryScLvlUpCostField.Equals(value) != true)) {
                    this.MilitaryScLvlUpCostField = value;
                    this.RaisePropertyChanged("MilitaryScLvlUpCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MilitaryScLvlUpExp {
            get {
                return this.MilitaryScLvlUpExpField;
            }
            set {
                if ((this.MilitaryScLvlUpExpField.Equals(value) != true)) {
                    this.MilitaryScLvlUpExpField = value;
                    this.RaisePropertyChanged("MilitaryScLvlUpExp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MilitaryScienceLvl {
            get {
                return this.MilitaryScienceLvlField;
            }
            set {
                if ((this.MilitaryScienceLvlField.Equals(value) != true)) {
                    this.MilitaryScienceLvlField = value;
                    this.RaisePropertyChanged("MilitaryScienceLvl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] MinsBlocks {
            get {
                return this.MinsBlocksField;
            }
            set {
                if ((object.ReferenceEquals(this.MinsBlocksField, value) != true)) {
                    this.MinsBlocksField = value;
                    this.RaisePropertyChanged("MinsBlocks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MissilesCount {
            get {
                return this.MissilesCountField;
            }
            set {
                if ((this.MissilesCountField.Equals(value) != true)) {
                    this.MissilesCountField = value;
                    this.RaisePropertyChanged("MissilesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Money {
            get {
                return this.MoneyField;
            }
            set {
                if ((this.MoneyField.Equals(value) != true)) {
                    this.MoneyField = value;
                    this.RaisePropertyChanged("Money");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mood {
            get {
                return this.MoodField;
            }
            set {
                if ((this.MoodField.Equals(value) != true)) {
                    this.MoodField = value;
                    this.RaisePropertyChanged("Mood");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NukesCount {
            get {
                return this.NukesCountField;
            }
            set {
                if ((this.NukesCountField.Equals(value) != true)) {
                    this.NukesCountField = value;
                    this.RaisePropertyChanged("NukesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PremierLvl {
            get {
                return this.PremierLvlField;
            }
            set {
                if ((this.PremierLvlField.Equals(value) != true)) {
                    this.PremierLvlField = value;
                    this.RaisePropertyChanged("PremierLvl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PremierLvlUpCost {
            get {
                return this.PremierLvlUpCostField;
            }
            set {
                if ((this.PremierLvlUpCostField.Equals(value) != true)) {
                    this.PremierLvlUpCostField = value;
                    this.RaisePropertyChanged("PremierLvlUpCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductionUpgradeCost {
            get {
                return this.ProductionUpgradeCostField;
            }
            set {
                if ((this.ProductionUpgradeCostField.Equals(value) != true)) {
                    this.ProductionUpgradeCostField = value;
                    this.RaisePropertyChanged("ProductionUpgradeCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShadowingLvl {
            get {
                return this.ShadowingLvlField;
            }
            set {
                if ((this.ShadowingLvlField.Equals(value) != true)) {
                    this.ShadowingLvlField = value;
                    this.RaisePropertyChanged("ShadowingLvl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ShadowingLvlUpCost {
            get {
                return this.ShadowingLvlUpCostField;
            }
            set {
                if ((this.ShadowingLvlUpCostField.Equals(value) != true)) {
                    this.ShadowingLvlUpCostField = value;
                    this.RaisePropertyChanged("ShadowingLvlUpCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, Totality.Client.GUI.ReferenceToServer.Country.SpyNetwork> SpyNetworks {
            get {
                return this.SpyNetworksField;
            }
            set {
                if ((object.ReferenceEquals(this.SpyNetworksField, value) != true)) {
                    this.SpyNetworksField = value;
                    this.RaisePropertyChanged("SpyNetworks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TaxesLvl {
            get {
                return this.TaxesLvlField;
            }
            set {
                if ((this.TaxesLvlField.Equals(value) != true)) {
                    this.TaxesLvlField = value;
                    this.RaisePropertyChanged("TaxesLvl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] WarList {
            get {
                return this.WarListField;
            }
            set {
                if ((object.ReferenceEquals(this.WarListField, value) != true)) {
                    this.WarListField = value;
                    this.RaisePropertyChanged("WarList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Country.SpyNetwork", Namespace="http://schemas.datacontract.org/2004/07/Totality.Model")]
        [System.SerializableAttribute()]
        public partial class SpyNetwork : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int NetLvlField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool[] RecruitField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int NetLvl {
                get {
                    return this.NetLvlField;
                }
                set {
                    if ((this.NetLvlField.Equals(value) != true)) {
                        this.NetLvlField = value;
                        this.RaisePropertyChanged("NetLvl");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool[] Recruit {
                get {
                    return this.RecruitField;
                }
                set {
                    if ((object.ReferenceEquals(this.RecruitField, value) != true)) {
                        this.RecruitField = value;
                        this.RaisePropertyChanged("Recruit");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DipContract", Namespace="http://schemas.datacontract.org/2004/07/Totality.Model.Diplomatical")]
    [System.SerializableAttribute()]
    public partial class DipContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReferenceToServer.ITransmitterService", CallbackContract=typeof(Totality.Client.GUI.ReferenceToServer.ITransmitterServiceCallback))]
    public interface ITransmitterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransmitterService/Register", ReplyAction="http://tempuri.org/ITransmitterService/RegisterResponse")]
        bool Register(string myName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransmitterService/Register", ReplyAction="http://tempuri.org/ITransmitterService/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string myName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransmitterService/AddOrders", ReplyAction="http://tempuri.org/ITransmitterService/AddOrdersResponse")]
        bool AddOrders(Totality.Client.GUI.ReferenceToServer.Order[] orders);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransmitterService/AddOrders", ReplyAction="http://tempuri.org/ITransmitterService/AddOrdersResponse")]
        System.Threading.Tasks.Task<bool> AddOrdersAsync(Totality.Client.GUI.ReferenceToServer.Order[] orders);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransmitterService/ShootDownNuke", ReplyAction="http://tempuri.org/ITransmitterService/ShootDownNukeResponse")]
        bool ShootDownNuke(string defender, System.Guid rocketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransmitterService/ShootDownNuke", ReplyAction="http://tempuri.org/ITransmitterService/ShootDownNukeResponse")]
        System.Threading.Tasks.Task<bool> ShootDownNukeAsync(string defender, System.Guid rocketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransmitterService/DipMsg", ReplyAction="http://tempuri.org/ITransmitterService/DipMsgResponse")]
        bool DipMsg(Totality.Client.GUI.ReferenceToServer.DipMsg msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransmitterService/DipMsg", ReplyAction="http://tempuri.org/ITransmitterService/DipMsgResponse")]
        System.Threading.Tasks.Task<bool> DipMsgAsync(Totality.Client.GUI.ReferenceToServer.DipMsg msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransmitterServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITransmitterService/InitializeNukeDialog")]
        void InitializeNukeDialog();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITransmitterService/UpdateNukeDialog")]
        void UpdateNukeDialog(Totality.Client.GUI.ReferenceToServer.NukeRocket[] rockets);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITransmitterService/SendNews")]
        void SendNews(Totality.Client.GUI.ReferenceToServer.News[] newsList);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITransmitterService/UpdateClient")]
        void UpdateClient(Totality.Client.GUI.ReferenceToServer.Country country);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITransmitterService/SendDip")]
        void SendDip(Totality.Client.GUI.ReferenceToServer.DipMsg msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITransmitterService/SendContracts")]
        void SendContracts(Totality.Client.GUI.ReferenceToServer.DipContract[] contracts);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransmitterServiceChannel : Totality.Client.GUI.ReferenceToServer.ITransmitterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransmitterServiceClient : System.ServiceModel.DuplexClientBase<Totality.Client.GUI.ReferenceToServer.ITransmitterService>, Totality.Client.GUI.ReferenceToServer.ITransmitterService {
        
        public TransmitterServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public TransmitterServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public TransmitterServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TransmitterServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TransmitterServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Register(string myName) {
            return base.Channel.Register(myName);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string myName) {
            return base.Channel.RegisterAsync(myName);
        }
        
        public bool AddOrders(Totality.Client.GUI.ReferenceToServer.Order[] orders) {
            return base.Channel.AddOrders(orders);
        }
        
        public System.Threading.Tasks.Task<bool> AddOrdersAsync(Totality.Client.GUI.ReferenceToServer.Order[] orders) {
            return base.Channel.AddOrdersAsync(orders);
        }
        
        public bool ShootDownNuke(string defender, System.Guid rocketId) {
            return base.Channel.ShootDownNuke(defender, rocketId);
        }
        
        public System.Threading.Tasks.Task<bool> ShootDownNukeAsync(string defender, System.Guid rocketId) {
            return base.Channel.ShootDownNukeAsync(defender, rocketId);
        }
        
        public bool DipMsg(Totality.Client.GUI.ReferenceToServer.DipMsg msg) {
            return base.Channel.DipMsg(msg);
        }
        
        public System.Threading.Tasks.Task<bool> DipMsgAsync(Totality.Client.GUI.ReferenceToServer.DipMsg msg) {
            return base.Channel.DipMsgAsync(msg);
        }
    }
}
